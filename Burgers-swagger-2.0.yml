#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: Burgers 1.0
paths:
  /rest/BrgExclusion:
    get:
      summary: Search BrgExclusion business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgexclusion-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfBrgExclusion'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: brgExclusionCustomerId
        description: Search filter for Customer
        type: string
        required: false
      - in: query
        name: brgExclusionCustomerId__brgCustomerEmail
        description: Search filter for Email
        type: string
        required: false
      - in: query
        name: brgExclusionIngredientId
        description: Search filter for Ingredient
        type: string
        required: false
      - in: query
        name: brgExclusionIngredientId__brgIngredientName
        description: Search filter for Name
        type: string
        required: false
      tags:
      - BrgExclusion
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      produces:
      - text/plain
      - application/json
      operationId: login
      responses:
        '200':
          description: Successful login
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: _output
        description: Optional output format
        type: string
        required: false
        enum:
        - json
        - oauth2
        - token
      tags:
      - session
  /rest/BrgComposition:
    get:
      summary: Search BrgComposition business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcomposition-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfBrgComposition'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: brgCompositionBurgerId
        description: Search filter for Burger
        type: string
        required: false
      - in: query
        name: brgCompositionBurgerId__brgBurgerName
        description: Search filter for Name
        type: string
        required: false
      - in: query
        name: brgCompositionIngredientId
        description: Search filter for Ingredient
        type: string
        required: false
      - in: query
        name: brgCompositionIngredientId__brgIngredientName
        description: Search filter for Name
        type: string
        required: false
      - in: query
        name: brgCompositionQuantity
        description: Search filter for Quantity
        type: integer
        required: false
      tags:
      - BrgComposition
  /rest/BrgOrder:
    get:
      summary: Search BrgOrder business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgorder-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfBrgOrder'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: _indexsearch
        description: Index search query
        type: string
        required: false
      - in: query
        name: _crosstab
        description: Apply pivot table
        type: string
        required: false
        enum:
        - BRGOrderStats
      - in: query
        name: _crosstabcubes
        description: Pivot table data as cubes?
        type: boolean
        required: false
      - in: query
        name: brgOrderDatetime
        description: Search filter for Date and time
        type: string
        required: false
      - in: query
        name: brgOrderCustomerId
        description: Search filter for Customer
        type: string
        required: false
      - in: query
        name: brgOrderCustomerId__brgCustomerEmail
        description: Search filter for Email
        type: string
        required: false
      - in: query
        name: brgOrderCustomerId__brgCustomerFirstname
        description: Search filter for First name
        type: string
        required: false
      - in: query
        name: brgOrderCustomerId__brgCustomerLastname
        description: Search filter for Last name
        type: string
        required: false
      - in: query
        name: brgOrderBurgerId
        description: Search filter for Burger
        type: string
        required: false
      - in: query
        name: brgOrderBurgerId__brgBurgerName
        description: Search filter for Name
        type: string
        required: false
      - in: query
        name: brgOrderBurgerId__brgBurgerPrice
        description: Search filter for Price
        type: number
        required: false
      - in: query
        name: brgOrderComposition
        description: Search filter for Composition
        type: string
        required: false
      - in: query
        name: brgOrderDate
        description: Search filter for Date
        type: string
        required: false
      tags:
      - BrgOrder
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: logout
      responses:
        '200':
          description: Successfull logout
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      tags:
      - session
  /rest/BrgIngredient:
    get:
      summary: Search BrgIngredient business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgingredient-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfBrgIngredient'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: _indexsearch
        description: Index search query
        type: string
        required: false
      - in: query
        name: brgIngredientName
        description: Search filter for Name
        type: string
        required: false
      - in: query
        name: brgIngredientPrice
        description: Search filter for Price
        type: number
        required: false
      tags:
      - BrgIngredient
  /rest/BrgComposition/{row_id}:
    post:
      summary: Create a new BrgCompositionbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcomposition-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgComposition'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgComposition'
        in: body
        name: body
      tags:
      - BrgComposition
      consumes:
      - application/json
    get:
      summary: Get a BrgComposition business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcomposition-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgComposition'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - BrgComposition
    delete:
      summary: Delete a BrgComposition business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcomposition-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - BrgComposition
    put:
      summary: Update a BrgCompositionbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcomposition-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgComposition'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgComposition'
        in: body
        name: body
      tags:
      - BrgComposition
      consumes:
      - application/json
  /rest/BrgCustomer/{row_id}:
    post:
      summary: Create a new BrgCustomerbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcustomer-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgCustomer'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgCustomer'
        in: body
        name: body
      tags:
      - BrgCustomer
      consumes:
      - application/json
    get:
      summary: Get a BrgCustomer business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcustomer-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgCustomer'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - BrgCustomer
    delete:
      summary: Delete a BrgCustomer business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcustomer-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - BrgCustomer
    put:
      summary: Update a BrgCustomerbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcustomer-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgCustomer'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgCustomer'
        in: body
        name: body
      tags:
      - BrgCustomer
      consumes:
      - application/json
  /rest/BrgExclusion/{row_id}:
    post:
      summary: Create a new BrgExclusionbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgexclusion-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgExclusion'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgExclusion'
        in: body
        name: body
      tags:
      - BrgExclusion
      consumes:
      - application/json
    get:
      summary: Get a BrgExclusion business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgexclusion-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgExclusion'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - BrgExclusion
    delete:
      summary: Delete a BrgExclusion business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgexclusion-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - BrgExclusion
    put:
      summary: Update a BrgExclusionbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgexclusion-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgExclusion'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgExclusion'
        in: body
        name: body
      tags:
      - BrgExclusion
      consumes:
      - application/json
  /rest/BrgIngredient/{row_id}:
    post:
      summary: Create a new BrgIngredientbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgingredient-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgIngredient'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgIngredient'
        in: body
        name: body
      tags:
      - BrgIngredient
      consumes:
      - application/json
    get:
      summary: Get a BrgIngredient business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgingredient-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgIngredient'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - BrgIngredient
    delete:
      summary: Delete a BrgIngredient business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgingredient-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - BrgIngredient
    put:
      summary: Update a BrgIngredientbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgingredient-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgIngredient'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgIngredient'
        in: body
        name: body
      tags:
      - BrgIngredient
      consumes:
      - application/json
  /rest/BrgCustomer:
    get:
      summary: Search BrgCustomer business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgcustomer-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfBrgCustomer'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: _indexsearch
        description: Index search query
        type: string
        required: false
      - in: query
        name: brgCustomerEmail
        description: Search filter for Email
        type: string
        required: false
      - in: query
        name: brgCustomerPhone
        description: Search filter for Phone number
        type: string
        required: false
      - in: query
        name: brgCustomerLastname
        description: Search filter for Last name
        type: string
        required: false
      - in: query
        name: brgCustomerFirstname
        description: Search filter for First name
        type: string
        required: false
      tags:
      - BrgCustomer
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
      parameters:
      - in: query
        name: texts
        description: Texts?
        type: boolean
        required: false
      tags:
      - session
  /rest/BrgOrder/{row_id}:
    post:
      summary: Create a new BrgOrderbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgorder-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgOrder'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgOrder'
        in: body
        name: body
      tags:
      - BrgOrder
      consumes:
      - application/json
    get:
      summary: Get a BrgOrder business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgorder-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgOrder'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - BrgOrder
    delete:
      summary: Delete a BrgOrder business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgorder-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - BrgOrder
    put:
      summary: Update a BrgOrderbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgorder-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgOrder'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgOrder'
        in: body
        name: body
      tags:
      - BrgOrder
      consumes:
      - application/json
  /rest/BrgBurger/{row_id}:
    post:
      summary: Create a new BrgBurgerbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgburger-create
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgBurger'
          description: Success in creating a new business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgBurger'
        in: body
        name: body
      tags:
      - BrgBurger
      consumes:
      - application/json
    get:
      summary: Get a BrgBurger business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgburger-get
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgBurger'
          description: Success in getting a single business object record
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - in: query
        name: _inline_documents
        description: Inline documents?
        type: boolean
        required: false
      - in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        type: boolean
        required: false
      - in: query
        name: _inline_objects
        description: Inline objects?
        type: boolean
        required: false
      tags:
      - BrgBurger
    delete:
      summary: Delete a BrgBurger business object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgburger-delete
      responses:
        '200':
          description: Success in deleting a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      tags:
      - BrgBurger
    put:
      summary: Update a BrgBurgerbusiness object record
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgburger-update
      responses:
        '200':
          schema:
            $ref: '#/definitions/BrgBurger'
          description: Success in updating a business object record
        '400':
          schema:
            $ref: '#/definitions/Error400'
          description: Bad request
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
        '404':
          schema:
            $ref: '#/definitions/Error404'
          description: Not found
      parameters:
      - in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        type: string
        required: true
      - schema:
          $ref: '#/definitions/BrgBurger'
        in: body
        name: body
      tags:
      - BrgBurger
      consumes:
      - application/json
  /rest/BrgBurger:
    get:
      summary: Search BrgBurger business object records or get contextualized metadata
      security:
      - bearerAuth: []
      produces:
      - application/json
      operationId: obj-brgburger-search
      responses:
        '200':
          schema:
            $ref: '#/definitions/ArrayOfBrgBurger'
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
        '401':
          schema:
            $ref: '#/definitions/Error401'
          description: Unauthorized
        '500':
          schema:
            $ref: '#/definitions/Error500'
          description: Internal server error
      parameters:
      - in: query
        name: _metadata
        description: Metadata?
        type: boolean
        required: false
      - in: query
        name: _count
        description: Count?
        type: boolean
        required: false
      - in: query
        name: _doc
        description: Documentation?
        type: boolean
        required: false
      - in: query
        name: _indexsearch
        description: Index search query
        type: string
        required: false
      - in: query
        name: brgBurgerName
        description: Search filter for Name
        type: string
        required: false
      - in: query
        name: brgBurgerPrice
        description: Search filter for Price
        type: number
        required: false
      - in: query
        name: brgBurgerPicture
        description: Search filter for Picture
        type: string
        required: false
      - in: query
        name: brgBurgerDescription
        description: Search filter for Description
        type: string
        required: false
      tags:
      - BrgBurger
securityDefinitions:
  basicAuth:
    type: basic
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
definitions:
  Error404:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 404
  BrgIngredient:
    type: object
    properties:
      brgIngredientName:
        description: Name
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      brgIngredientPrice:
        description: Price
        type: number
  ArrayOfBrgCustomer:
    type: array
    items:
      $ref: '#/definitions/BrgCustomer'
  ArrayOfBrgIngredient:
    type: array
    items:
      $ref: '#/definitions/BrgIngredient'
  ArrayOfBrgOrder:
    type: array
    items:
      $ref: '#/definitions/BrgOrder'
  PublicationResult:
    type: object
    properties:
      mime:
        description: MIME type
        type: string
      content:
        description: Content (plain text or base64 encoded)
        type: string
  ArrayOfBrgExclusion:
    type: array
    items:
      $ref: '#/definitions/BrgExclusion'
  BrgOrder:
    type: object
    properties:
      brgOrderBurgerId__brgBurgerPrice:
        description: Price
        type: number
      brgOrderBurgerId:
        description: Burger
        type: string
      brgOrderDatetime:
        description: Date and time
        type: string
      brgOrderCustomerId__brgCustomerEmail:
        description: Email
        type: string
      brgOrderCustomerId:
        description: Customer
        type: string
      brgOrderBurgerId__brgBurgerName:
        description: Name
        type: string
      brgOrderCustomerId__brgCustomerFirstname:
        description: First name
        type: string
      brgOrderCustomerId__brgCustomerLastname:
        description: Last name
        type: string
      brgOrderComposition:
        description: Composition
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      brgOrderDate:
        description: Date
        type: string
  ArrayOfBrgComposition:
    type: array
    items:
      $ref: '#/definitions/BrgComposition'
  ActionResult:
    type: object
    properties:
      result:
        description: Action result
        type: string
  TreeviewData:
    type: object
    properties:
      item:
        description: Object item with lists of linked objects' items
        type: object
  BrgComposition:
    type: object
    properties:
      brgCompositionBurgerId:
        description: Burger
        type: string
      brgCompositionIngredientId__brgIngredientName:
        description: Name
        type: string
      brgCompositionQuantity:
        description: Quantity
        type: integer
      brgCompositionBurgerId__brgBurgerName:
        description: Name
        type: string
      brgCompositionIngredientId:
        description: Ingredient
        type: string
      row_id:
        description: Unique technical row ID
        type: string
  BrgCustomer:
    type: object
    properties:
      brgCustomerPhone:
        description: Phone number
        type: string
      brgCustomerFirstname:
        description: First name
        type: string
      brgCustomerLastname:
        description: Last name
        type: string
      brgCustomerEmail:
        description: Email
        type: string
      row_id:
        description: Unique technical row ID
        type: string
  ArrayOfBrgBurger:
    type: array
    items:
      $ref: '#/definitions/BrgBurger'
  Error400:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 400
  Error401:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 401
  Error500:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 500
  BrgExclusion:
    type: object
    properties:
      brgExclusionIngredientId:
        description: Ingredient
        type: string
      brgExclusionCustomerId:
        description: Customer
        type: string
      brgExclusionCustomerId__brgCustomerEmail:
        description: Email
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      brgExclusionIngredientId__brgIngredientName:
        description: Name
        type: string
  BrgBurger:
    type: object
    properties:
      brgBurgerPrice:
        description: Price
        type: number
      brgBurgerPicture:
        description: Picture
        type: object
      brgBurgerDescription:
        description: Description
        type: string
      row_id:
        description: Unique technical row ID
        type: string
      brgBurgerName:
        description: Name
        type: string
  Error403:
    type: object
    properties:
      error:
        description: Error message
        type: string
      status:
        description: Error status
        type: integer
        enum:
        - 403
swagger: '2.0'
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module Burgers
  title: Burgers
  version: '1.0'
tags:
- name: BrgBurger
  description: Burger
- name: BrgComposition
  description: Burger's ingredient
- name: BrgCustomer
  description: Customer
- name: BrgExclusion
  description: Exclusion
- name: BrgIngredient
  description: Ingredient
- name: BrgOrder
  description: Order
